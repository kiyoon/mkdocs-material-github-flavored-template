{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":[" "]},"docs":[{"location":"","title":"MkDocs Material but GitHub-Flavored Markdown","text":"<p>This is a simple example of how to use GitHub-Flavored Markdown with MkDocs Material (almost).</p>"},{"location":"#installation","title":"Installation","text":"<pre><code>pip install -r requirements.txt\n</code></pre>"},{"location":"#usage","title":"Usage","text":"<p>To preview the site,</p> <pre><code>mkdocs serve\n</code></pre>"},{"location":"#features","title":"Features","text":""},{"location":"#github-style-callouts-aka-admonitions-or-alert","title":"Github style callouts (a.k.a. admonitions or alert)","text":"<p>Using mkdocs-callouts and additional admonitions (IMPORTANT, CAUTION) in docs/stylesheets/extra_admonitions.css.</p> <p>See how it renders in the documentation!</p> <pre><code>&gt; [!NOTE]\n&gt; This is a NOTE type alert.\n\n&gt; [!TIP]\n&gt; This is a TIP type alert.\n\n&gt; [!WARNING]\n&gt; This is a WARNING type alert.\n\n&gt; [!IMPORTANT]\n&gt; This is an IMPORTANT type alert.\n\n&gt; [!CAUTION]\n&gt; This is a CAUTION type alert.\n</code></pre> <p>[!NOTE] This is a NOTE type alert.</p> <p>[!TIP] This is a TIP type alert.</p> <p>[!WARNING] This is a WARNING type alert.</p> <p>[!IMPORTANT] This is an IMPORTANT type alert.</p> <p>[!CAUTION] This is a CAUTION type alert.</p>"},{"location":"#latex-math-equations","title":"Latex math equations","text":"<p>Using MathJax defined in docs/javascripts/mathjax.js.</p> <pre><code>$a^2 + b^2 = c^2$\n\n$$\n\\begin{align*}\n\\dot{x} &amp; = \\sigma(y-x) \\\\\n\\dot{y} &amp; = \\rho x - y - xz \\\\\n\\dot{z} &amp; = -\\beta z + xy\n\\end{align*}\n$$\n</code></pre> <p>\\(a^2 + b^2 = c^2\\)</p> \\[ \\begin{align*} \\dot{x} &amp; = \\sigma(y-x) \\\\ \\dot{y} &amp; = \\rho x - y - xz \\\\ \\dot{z} &amp; = -\\beta z + xy \\end{align*} \\]"},{"location":"#flowchart-with-mermaid","title":"Flowchart with mermaid","text":"<pre><code>```mermaid\ngraph LR\n  A[Start] --&gt; B{Error?};\n  B --&gt;|Yes| C[Hmm...];\n  C --&gt; D[Debug];\n  D --&gt; B;\n  B ----&gt;|No| E[Yay!];\n```\n</code></pre> <pre><code>graph LR\n  A[Start] --&gt; B{Error?};\n  B --&gt;|Yes| C[Hmm...];\n  C --&gt; D[Debug];\n  D --&gt; B;\n  B ----&gt;|No| E[Yay!];</code></pre>"},{"location":"#automatic-api-reference-pages","title":"Automatic API reference pages","text":"<p>Using gen-files and literate-nav. Basically scripts/gen_ref_nav.py will generate <code>reference/SUMMARY.md</code> file and then add to the navigation menu when you build it.</p> <p>Relevant configuration in mkdocs.yml:</p> <pre><code>nav:\n  # defer to gen-files + literate-nav\n  - API reference:\n      - mkdocstrings-python: reference/\n\nplugins:\n  - gen-files:\n      scripts:\n        - scripts/gen_ref_nav.py\n  - literate-nav:\n      nav_file: SUMMARY.md\n</code></pre> <p>Notice you can add modules to ignore in scripts/gen_ref_nav.py by adding to <code>IGNORE_MODULES_*</code> set.</p> <pre><code>IGNORE_MODULES_EXACT = {\"my_project.my_module\"}\nIGNORE_MODULES_STARTSWITH = {\"my_project.cli.\"}\n</code></pre>"},{"location":"#useful-github-actions","title":"Useful GitHub Actions","text":"<ul> <li>.github/workflows/check-docs.yml to check if the documentation builds successfully in PRs.</li> <li>.github/workflows/deploy-docs-on-latest.yml to deploy the documentation to GitHub Pages when you push to <code>main</code>/<code>master</code> branch.</li> <li>.github/workflows/deploy.yml to add a new tag, change docs/CHANGELOG.md based on conventional commits, deploy the documentation while keeping the previous versions, and create a GitHub release.</li> </ul> <p>[!TIP] Notice that you push the documentation to GitLab, because GitLab pages are free. You can use it with GitHub private repositories without the Enterprise plan. See Setting Up GitLab Pages.</p>"},{"location":"CHANGELOG/","title":"Changelog","text":"<p>All notable changes to this project will be documented in this file.</p> <p>The format is based on Keep a Changelog, and this project adheres to Semantic Versioning.</p>"},{"location":"mkdocs/gitlab_pages/","title":"Setting Up GitLab Pages","text":"<ol> <li>Create a GitLab repo<ul> <li>Create from template -&gt; Pages/Plain HTML.</li> </ul> </li> <li> <p>Set up <code>Deploy -&gt; Pages</code> <pre><code>image: busybox\n\npages:\n  stage: deploy\n  script:\n    - echo \"The site will be deployed to $CI_PAGES_URL\"\n  artifacts:\n    paths:\n      - public\n  rules:\n    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH\n</code></pre>     Reference: https://gitlab.com/pages/plain-html</p> <p>Now, everything under <code>public/</code> will be deployed to GitLab Pages.</p> </li> <li> <p><code>Deploy -&gt; Pages -&gt; Use unique domain</code> untick to make the URL shorter.</p> </li> <li><code>Settings -&gt; Access Tokens -&gt; Add new token</code>, <code>write repository</code> scope, Maintainer role</li> <li>(Optional) If you want to make the documentation public, <code>Settings -&gt; General -&gt; Visibility (expand) -&gt; Pages -&gt; Everyone</code></li> </ol>"},{"location":"mkdocs/gitlab_pages/#github-repo-setup","title":"GitHub repo setup","text":"<ol> <li><code>Setting -&gt; Secrets and variables -&gt; Actions</code> -&gt; Add <code>New repository secret</code><ul> <li>Name: <code>GITLAB_TOKEN</code></li> <li>Secret: GitLab access token</li> </ul> </li> <li><code>Setting -&gt; Secrets and variables -&gt; Actions</code> -&gt; Variables -&gt; Add <code>GITLAB_PROJECT</code><ul> <li>Name: <code>GITLAB_PROJECT</code></li> <li>Value: Name of the GitLab docs repo (e.g. gitlab-user/my-project-docs)</li> <li>Warning: it's not the URL of the documentation. It's the name of the repository with the username.</li> </ul> </li> </ol>"},{"location":"mkdocs/gitlab_pages/#github-actions","title":"GitHub Actions","text":"<p>Use the following GitHub Actions to deploy MkDocs to GitLab Pages. If you omit the gitlab-related settings, it will be published to GitHub on the <code>gh-pages</code> branch.</p> <pre><code>name: Manually deploy MkDocs\n\non:\n  workflow_dispatch:\n    inputs:\n      version-tag:\n        description: Version tag\n        required: true\n        default: v0.1.0\n\njobs:\n  deploy-mkdocs:\n    uses: deargen/workflows/.github/workflows/deploy-mkdocs.yml@master\n    with:\n      requirements-file: requirements.txt\n      version-tag: ${{ github.event.inputs.version-tag }}\n      deploy-type: tag\n      gitlab-project: ${{ vars.GITLAB_PROJECT }}\n      gitlab-branch: master\n    secrets:\n      GITLAB_TOKEN: ${{ secrets.GITLAB_TOKEN }}\n</code></pre> <pre><code>name: Deploy MkDocs on latest commit\n\non:\n  push:\n    branches:\n      - main\n      - master\n\njobs:\n  deploy-mkdocs:\n    uses: deargen/workflows/.github/workflows/deploy-mkdocs.yml@master\n    with:\n      deploy-type: latest\n      requirements-file: requirements.txt\n      gitlab-project: ${{ vars.GITLAB_PROJECT }}\n      gitlab-branch: master\n    secrets:\n      GITLAB_TOKEN: ${{ secrets.GITLAB_TOKEN }}\n</code></pre>"},{"location":"mkdocs/mkdocstrings/","title":"Referencing python source code","text":""},{"location":"mkdocs/mkdocstrings/#if-you-want-to-add-source-code-description-to-your-page-you-can-use-the-following-syntax","title":"If you want to add source code description to your page, you can use the following syntax.","text":"<pre><code>::: my_project.two_numbers.TwoNumbers\n    options:\n        show_root_heading: true\n</code></pre>"},{"location":"mkdocs/mkdocstrings/#my_project.two_numbers.TwoNumbers","title":"<code>my_project.two_numbers.TwoNumbers</code>  <code>dataclass</code>","text":"<p>Example class that adds two numbers.</p> Source code in <code>src/my_project/two_numbers.py</code> <pre><code>@dataclass\nclass TwoNumbers:\n    \"\"\"Example class that adds two numbers.\"\"\"\n\n    num_1: int\n    num_2: int\n\n    def add(self):\n        \"\"\"\n        Add two numbers together.\n\n        Examples:\n            &gt;&gt;&gt; TwoNumbers(1, 2).add()\n            3\n\n            &gt;&gt;&gt; TwoNumbers(1, -1).add()\n            0\n\n        Returns:\n            (int): The sum of the two numbers.\n\n        Note:\n            This function only supports integers.\n\n        Todo: You can put title here.\n            * Add support for floats.\n            * Add support for strings.\n        \"\"\"\n        assert isinstance(self.num_1, int)\n        assert isinstance(self.num_2, int)\n        return self.num_1 + self.num_2\n</code></pre>"},{"location":"mkdocs/mkdocstrings/#my_project.two_numbers.TwoNumbers.add","title":"<code>add()</code>","text":"<p>Add two numbers together.</p> <p>Examples:</p> <pre><code>&gt;&gt;&gt; TwoNumbers(1, 2).add()\n3\n</code></pre> <pre><code>&gt;&gt;&gt; TwoNumbers(1, -1).add()\n0\n</code></pre> <p>Returns:</p> Type Description <code>int</code> <p>The sum of the two numbers.</p> Note <p>This function only supports integers.</p> You can put title here. <ul> <li>Add support for floats.</li> <li>Add support for strings.</li> </ul> Source code in <code>src/my_project/two_numbers.py</code> <pre><code>def add(self):\n    \"\"\"\n    Add two numbers together.\n\n    Examples:\n        &gt;&gt;&gt; TwoNumbers(1, 2).add()\n        3\n\n        &gt;&gt;&gt; TwoNumbers(1, -1).add()\n        0\n\n    Returns:\n        (int): The sum of the two numbers.\n\n    Note:\n        This function only supports integers.\n\n    Todo: You can put title here.\n        * Add support for floats.\n        * Add support for strings.\n    \"\"\"\n    assert isinstance(self.num_1, int)\n    assert isinstance(self.num_2, int)\n    return self.num_1 + self.num_2\n</code></pre>"},{"location":"mkdocs/mkdocstrings/#if-you-want-to-include-all-submodules-you-can-use-the-following-syntax","title":"If you want to include all submodules, you can use the following syntax.","text":"<pre><code>::: my_project\n    options:\n        show_root_heading: true\n        show_submodules: true\n</code></pre>"},{"location":"mkdocs/mkdocstrings/#my_project.two_numbers","title":"<code>two_numbers</code>","text":""},{"location":"mkdocs/mkdocstrings/#my_project.two_numbers.TwoNumbers","title":"<code>TwoNumbers</code>  <code>dataclass</code>","text":"<p>Example class that adds two numbers.</p> Source code in <code>src/my_project/two_numbers.py</code> <pre><code>@dataclass\nclass TwoNumbers:\n    \"\"\"Example class that adds two numbers.\"\"\"\n\n    num_1: int\n    num_2: int\n\n    def add(self):\n        \"\"\"\n        Add two numbers together.\n\n        Examples:\n            &gt;&gt;&gt; TwoNumbers(1, 2).add()\n            3\n\n            &gt;&gt;&gt; TwoNumbers(1, -1).add()\n            0\n\n        Returns:\n            (int): The sum of the two numbers.\n\n        Note:\n            This function only supports integers.\n\n        Todo: You can put title here.\n            * Add support for floats.\n            * Add support for strings.\n        \"\"\"\n        assert isinstance(self.num_1, int)\n        assert isinstance(self.num_2, int)\n        return self.num_1 + self.num_2\n</code></pre>"},{"location":"mkdocs/mkdocstrings/#my_project.two_numbers.TwoNumbers.add","title":"<code>add()</code>","text":"<p>Add two numbers together.</p> <p>Examples:</p> <pre><code>&gt;&gt;&gt; TwoNumbers(1, 2).add()\n3\n</code></pre> <pre><code>&gt;&gt;&gt; TwoNumbers(1, -1).add()\n0\n</code></pre> <p>Returns:</p> Type Description <code>int</code> <p>The sum of the two numbers.</p> Note <p>This function only supports integers.</p> You can put title here. <ul> <li>Add support for floats.</li> <li>Add support for strings.</li> </ul> Source code in <code>src/my_project/two_numbers.py</code> <pre><code>def add(self):\n    \"\"\"\n    Add two numbers together.\n\n    Examples:\n        &gt;&gt;&gt; TwoNumbers(1, 2).add()\n        3\n\n        &gt;&gt;&gt; TwoNumbers(1, -1).add()\n        0\n\n    Returns:\n        (int): The sum of the two numbers.\n\n    Note:\n        This function only supports integers.\n\n    Todo: You can put title here.\n        * Add support for floats.\n        * Add support for strings.\n    \"\"\"\n    assert isinstance(self.num_1, int)\n    assert isinstance(self.num_2, int)\n    return self.num_1 + self.num_2\n</code></pre>"},{"location":"mkdocs/mkdocstrings/#if-you-want-to-show-only-the-source-code-you-can-use-the-following-syntax","title":"If you want to show only the source code, you can use the following syntax.","text":"<pre><code>::: my_project.two_numbers.TwoNumbers\n    options:\n        show_docstring_attributes: false\n        show_docstring_functions: false\n        show_docstring_classes: false\n        show_docstring_modules: false\n        show_docstring_description: false\n        show_docstring_examples: false\n        show_docstring_other_parameters: false\n        show_docstring_parameters: false\n        show_docstring_raises: false\n        show_docstring_receives: false\n        show_docstring_returns: false\n        show_docstring_warns: false\n        show_docstring_yields: false\n        members: false\n        show_bases: false\n        show_source: true\n</code></pre> Source code in <code>src/my_project/two_numbers.py</code> <pre><code>@dataclass\nclass TwoNumbers:\n    \"\"\"Example class that adds two numbers.\"\"\"\n\n    num_1: int\n    num_2: int\n\n    def add(self):\n        \"\"\"\n        Add two numbers together.\n\n        Examples:\n            &gt;&gt;&gt; TwoNumbers(1, 2).add()\n            3\n\n            &gt;&gt;&gt; TwoNumbers(1, -1).add()\n            0\n\n        Returns:\n            (int): The sum of the two numbers.\n\n        Note:\n            This function only supports integers.\n\n        Todo: You can put title here.\n            * Add support for floats.\n            * Add support for strings.\n        \"\"\"\n        assert isinstance(self.num_1, int)\n        assert isinstance(self.num_2, int)\n        return self.num_1 + self.num_2\n</code></pre> <p>See mkdocstrings for more about the options.</p>"},{"location":"mkdocs/mkdocstrings/#if-you-want-to-change-the-heading-level-in-the-table-of-contents-you-can-use-the-as-in-markdown","title":"If you want to change the heading level in the table of contents, you can use the # as in markdown.","text":"<pre><code>### ::: my_project.two_numbers.TwoNumbers\n    options:\n        show_docstring_description: false\n        show_docstring_examples: false\n        members: false\n        show_bases: false\n        show_source: true\n</code></pre> Source code in <code>src/my_project/two_numbers.py</code> <pre><code>@dataclass\nclass TwoNumbers:\n    \"\"\"Example class that adds two numbers.\"\"\"\n\n    num_1: int\n    num_2: int\n\n    def add(self):\n        \"\"\"\n        Add two numbers together.\n\n        Examples:\n            &gt;&gt;&gt; TwoNumbers(1, 2).add()\n            3\n\n            &gt;&gt;&gt; TwoNumbers(1, -1).add()\n            0\n\n        Returns:\n            (int): The sum of the two numbers.\n\n        Note:\n            This function only supports integers.\n\n        Todo: You can put title here.\n            * Add support for floats.\n            * Add support for strings.\n        \"\"\"\n        assert isinstance(self.num_1, int)\n        assert isinstance(self.num_2, int)\n        return self.num_1 + self.num_2\n</code></pre>"},{"location":"reference/SUMMARY/","title":"SUMMARY","text":"<ul> <li> my_project<ul> <li> two_numbers</li> </ul> </li> </ul>"},{"location":"reference/my_project/","title":"Index","text":""},{"location":"reference/my_project/two_numbers/","title":"<code class=\"doc-symbol doc-symbol-nav doc-symbol-module\"></code> two_numbers","text":""},{"location":"reference/my_project/two_numbers/#my_project.two_numbers.TwoNumbers","title":"<code>TwoNumbers</code>  <code>dataclass</code>","text":"<p>Example class that adds two numbers.</p> Source code in <code>src/my_project/two_numbers.py</code> <pre><code>@dataclass\nclass TwoNumbers:\n    \"\"\"Example class that adds two numbers.\"\"\"\n\n    num_1: int\n    num_2: int\n\n    def add(self):\n        \"\"\"\n        Add two numbers together.\n\n        Examples:\n            &gt;&gt;&gt; TwoNumbers(1, 2).add()\n            3\n\n            &gt;&gt;&gt; TwoNumbers(1, -1).add()\n            0\n\n        Returns:\n            (int): The sum of the two numbers.\n\n        Note:\n            This function only supports integers.\n\n        Todo: You can put title here.\n            * Add support for floats.\n            * Add support for strings.\n        \"\"\"\n        assert isinstance(self.num_1, int)\n        assert isinstance(self.num_2, int)\n        return self.num_1 + self.num_2\n</code></pre>"},{"location":"reference/my_project/two_numbers/#my_project.two_numbers.TwoNumbers.add","title":"<code>add()</code>","text":"<p>Add two numbers together.</p> <p>Examples:</p> <pre><code>&gt;&gt;&gt; TwoNumbers(1, 2).add()\n3\n</code></pre> <pre><code>&gt;&gt;&gt; TwoNumbers(1, -1).add()\n0\n</code></pre> <p>Returns:</p> Type Description <code>int</code> <p>The sum of the two numbers.</p> Note <p>This function only supports integers.</p> You can put title here. <ul> <li>Add support for floats.</li> <li>Add support for strings.</li> </ul> Source code in <code>src/my_project/two_numbers.py</code> <pre><code>def add(self):\n    \"\"\"\n    Add two numbers together.\n\n    Examples:\n        &gt;&gt;&gt; TwoNumbers(1, 2).add()\n        3\n\n        &gt;&gt;&gt; TwoNumbers(1, -1).add()\n        0\n\n    Returns:\n        (int): The sum of the two numbers.\n\n    Note:\n        This function only supports integers.\n\n    Todo: You can put title here.\n        * Add support for floats.\n        * Add support for strings.\n    \"\"\"\n    assert isinstance(self.num_1, int)\n    assert isinstance(self.num_2, int)\n    return self.num_1 + self.num_2\n</code></pre>"}]}